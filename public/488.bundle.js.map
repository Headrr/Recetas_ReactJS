{"version":3,"sources":["webpack://tarea_1-cookapp/./src/custom-hooks/useModal.js","webpack://tarea_1-cookapp/./src/components/Recipes/Receta.js","webpack://tarea_1-cookapp/./src/components/Recipes/Recetas.js","webpack://tarea_1-cookapp/./src/components/Recipes/index.js"],"names":["useState","modal","setModal","handleCloseModal","handleOpenModal","tipoComida","tipo","title","style","width","borderRadius","Track","props","id","name","tiempo","porciones","etiquetas","url","descripcion","context","useContext","CartContext","existe","cart","setCart","setExiste","useModal","display","flexDirection","height","alignItems","marginRight","marginLeft","marginBottom","receta","backgroundColor","borderTopLeftRadius","borderTopRightRadius","justifyContent","margin","includes","strokeWidth","fill","size","color","align","map","item","component","src","alt","textAlign","marginTop","fontSize","padding","onClick","borderBottomLeftRadius","borderBottomRightRadius","propTypes","data","recetas","text","Fragment","Message","className","Grid","container","spacing","justify","Receta","key","RecetasContext","doneFetch","length","Recetas","ProgressBar"],"mappings":"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","file":"488.bundle.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useModal = () => {\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const handleCloseModal = () => {\r\n    setModal(false);\r\n  };\r\n\r\n  const handleOpenModal = () => {\r\n    setModal(true);\r\n  };\r\n\r\n  return { modal, handleCloseModal, handleOpenModal };\r\n};\r\n\r\nexport default useModal;\r\n","import React, { Fragment, useContext, useState } from \"react\";\r\nimport ButtonPrimary from \"../Common/ButtonPrimary\";\r\nimport { CartContext } from \"../../contexts/Saves\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  CardSubtitle,\r\n  CardTitle,\r\n  CardFooter,\r\n  CardImg,\r\n  Button,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { Clock, User, Star, Heart } from \"react-feather\";\r\nimport Flags from \"country-flag-icons/react/3x2\";\r\nimport propTypes from \"prop-types\";\r\nimport SVGStar from \"../../assets/static/icons/star.svg\";\r\nimport ModalAdd from \"../../components/ModalAddFavoritos\";\r\nimport useModal from \"../../custom-hooks/useModal\";\r\n\r\nconst tipoComida = (tipo) => {\r\n  if (tipo === \"China\")\r\n    return (\r\n      <Flags.CH title=\"China\" style={{ width: \"12%\", borderRadius: 10 }} />\r\n    );\r\n  if (tipo === \"Española\")\r\n    return <Flags.ES title=\"España\" style={{ width: \"12%\" }} />;\r\n  if (tipo === \"Chilena\")\r\n    return <Flags.CL title=\"Chile\" style={{ width: \"12%\" }} />;\r\n  if (tipo === \"Italiana\")\r\n    return <Flags.IT title=\"Italia\" style={{ width: \"12%\" }} />;\r\n  if (tipo === \"Francia\")\r\n    return <Flags.FR title=\"Francia\" style={{ width: \"12%\" }} />;\r\n  if (tipo === \"Egipto\")\r\n    return <Flags.EG title=\"Egipto\" style={{ width: \"12%\" }} />;\r\n  else return <Flags.CL title=\"Chile\" style={{ width: \"12%\" }} />;\r\n  // if (tipo === \"Chile\")\r\n  //   return <Flags.CH title=\"Chile\" style={{ width: \"12%\" }} />;\r\n};\r\n\r\nconst Track = (props) => {\r\n  const { id, name, tiempo, porciones, tipo, etiquetas, url, descripcion } =\r\n    props;\r\n  const context = useContext(CartContext);\r\n  const { cart, setCart, existe, setExiste } = context;\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const { modal, handleCloseModal, handleOpenModal } = useModal();\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        height: 550,\r\n        width: \"22%\",\r\n        alignItems: \"center\",\r\n        marginRight: 20,\r\n        marginLeft: 20,\r\n        marginBottom: 60,\r\n      }}\r\n    >\r\n      <ModalAdd\r\n        // modalVisible={modalVisible}\r\n        // setModalVisible={setModalVisible}\r\n        handleCloseModal={handleCloseModal}\r\n        handleOpenModal={handleOpenModal}\r\n        receta={props}\r\n        id={id}\r\n        name={name}\r\n        modal={modal}\r\n      />\r\n\r\n      <Card style={{ borderRadius: 15, marginBottom: 20 }}>\r\n        <CardHeader\r\n          style={{\r\n            backgroundColor: \"#a0a0a0ba\",\r\n            borderTopLeftRadius: 15,\r\n            borderTopRightRadius: 15,\r\n          }}\r\n        >\r\n          <CardTitle>\r\n            <Row style={{ justifyContent: \"space-between\", margin: 10 }}>\r\n              <h2>{name}  {existe.includes(id) ? (\r\n                  // <Button size='sm' style={{width: '20%'}}>\r\n                  <Heart\r\n                    strokeWidth={3}\r\n                    fill=\"red\"\r\n                    size={25}\r\n                    color=\"red\"\r\n                    style={{\r\n                      color: \"red\",\r\n                      marginRight: 10,\r\n                      // backgroundColor: \"red\",\r\n                      // borderRadius: 10,\r\n                      // borderBottomColor: \"red\",\r\n                      margin: 5,\r\n                    }}\r\n                  />\r\n                ) : // </Button>\r\n                null}</h2>\r\n              {tipoComida(tipo)}\r\n            </Row>\r\n          </CardTitle>\r\n          <CardSubtitle>\r\n            <Row align=\"left\">\r\n              <Col>\r\n                {etiquetas.map((item) => (\r\n                  <span style={{ margin: 3 }}>\r\n                    <i>{item}</i>\r\n                  </span>\r\n                ))}\r\n              </Col>\r\n              <Col align=\"right\">\r\n               \r\n              </Col>\r\n            </Row>\r\n          </CardSubtitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <CardImg\r\n            component=\"img\"\r\n            height=\"194\"\r\n            src={url}\r\n            alt=\"fotografía receta\"\r\n            style={{ borderRadius: 10 }}\r\n          />\r\n\r\n          <div style={{ textAlign: \"justify\", marginTop: 10, height: 110 }}>\r\n            <i>{descripcion}</i>\r\n          </div>\r\n\r\n          <Row>\r\n            <Col>\r\n              {existe.includes(id) ? (\r\n                <Label\r\n                  // disabled\r\n                  color=\"warning\"\r\n                  style={{\r\n                    color: \"black\",\r\n                    fontSize: 16,\r\n                    // backgroundColor: \"grey\",\r\n                    padding: 5,\r\n                    borderRadius: 5,\r\n                    height: 35,\r\n                  }}\r\n                  // onClick={ () =>\r\n                  //\r\n                  // onClick={() => {\r\n                  //   setModalVisible(true)\r\n                  // }\r\n                  // }\r\n                >\r\n                  <Heart size={25} color=\"red\" fill='red'  />{\" \"}\r\n                  Me gusta!\r\n                </Label>\r\n              ) : (\r\n                <Button\r\n                  color=\"white\"\r\n                  // style={{ color: \"white\", fontSize: 16 }}\r\n                  style={{\r\n                    color: \"black\",\r\n                    fontSize: 16,\r\n                    // backgroundColor: \"grey\",\r\n                    padding: 5,\r\n                    borderRadius: 5,\r\n                    height: 35,\r\n                  }}\r\n                  // onClick={ () =>\r\n                  //\r\n                  // onClick={() => {\r\n                  //   setModalVisible(true);\r\n                  // }}\r\n                  onClick={handleOpenModal}\r\n                >\r\n                   <Heart size={25} color=\"red\"  />{\" \"}\r\n                  Dar me gusta\r\n                </Button>\r\n              )}\r\n            </Col>\r\n            {/* <Col>\r\n              <Button onClick={() => console.log(cart)}>Print cart</Button>\r\n              <Button onClick={() => console.log(context.cart)}>Print cart</Button>\r\n            </Col> */}\r\n            <Col align=\"right\">\r\n              {/* <ButtonPrimary type=\"lyrics\" to={`/recetas/id/${id}`} /> */}\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n        <CardFooter\r\n          style={{\r\n            backgroundColor: \"#a0a0a0ba\",\r\n            borderBottomLeftRadius: 15,\r\n            borderBottomRightRadius: 15,\r\n          }}\r\n        >\r\n          <Col>\r\n            <Clock size={20} /> Tiempo de preparación: <strong>{tiempo}</strong>{\" \"}\r\n            minutos\r\n          </Col>\r\n\r\n          <Col>\r\n            <User size={20} /> Porciones: <strong>{porciones}</strong>\r\n          </Col>\r\n        </CardFooter>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\n// DOCUMENTACIÓN PROP-TYPE\r\nTrack.propTypes = {\r\n  data: propTypes.object,\r\n};\r\n\r\ntipoComida.propTypes = {\r\n  data: propTypes.oneOf([\r\n    \"China\",\r\n    \"Española\",\r\n    \"Chilena\",\r\n    \"Italiana\",\r\n    \"Francia\",\r\n    \"Egipto\",\r\n  ]),\r\n};\r\n\r\nexport default Track;\r\n\r\n// {existe.includes(recetas.id) ? (\r\n//   <View\r\n//     style={{\r\n//         backgroundColor: 'grey',\r\n//         padding: 10,\r\n//         marginVertical: 5,\r\n//         borderRadius: 5,\r\n//         width: '50%',\r\n//         marginBottom: 5,\r\n//         width: '30%',\r\n//         marginHorizontal: 10\r\n//     }}>\r\n//     <Text style={{fontSize: 15, color: 'white', textAlign: 'center'}}>\r\n//       En Favoritos\r\n//     </Text>\r\n//   </View>\r\n// ) : (\r\n//   <TouchableOpacity\r\n//     style={{\r\n//       backgroundColor: 'gold',\r\n//       padding: 10,\r\n//       marginVertical: 5,\r\n//       borderRadius: 5,\r\n//       width: '50%',\r\n//       marginBottom: 5,\r\n//       width: '30%',\r\n//       marginHorizontal: 10\r\n//     }}>\r\n//     <Text\r\n//       style={{\r\n//         fontSize: 15,\r\n//         color: '#2d2e32',\r\n//         paddingHorizontal: 5,\r\n//         textAlign: 'center',\r\n//       }}\r\n//       onPress={() => {\r\n//         setModalVisible(true);\r\n//       }}>\r\n//       Favoritos\r\n//     </Text>\r\n//   </TouchableOpacity>\r\n// )}\r\n// </View>\r\n","import React, { Fragment } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Receta from \"./Receta\";\r\nimport Message from \"../Common/Message\";\r\n\r\nconst Tracks = ({ recetas, text }) => (\r\n  <Fragment>\r\n    {/* Patrón de diseño Render Props en Componente Message para variar el valor de la prop text de acuerdo al mensaje que se esté pasando */}\r\n    <Message text={text} />\r\n    <div className=\"root\">\r\n      <Grid container spacing={3} justify=\"center\">\r\n        {recetas.map((receta) => {\r\n          const { id, name, tiempo, porciones, tipo, etiquetas, url, descripcion} =\r\n          receta;\r\n          return (\r\n            <Receta\r\n              key={id}\r\n              id={id}\r\n              name={name}\r\n              tiempo={tiempo}\r\n              porciones={porciones}\r\n              tipo={tipo}\r\n              etiquetas={etiquetas}\r\n              url={url}\r\n              descripcion={descripcion}\r\n            />\r\n          );\r\n        })}\r\n         {/* Patrón de diseño Render Props en Componente Receta para renderizar el valor de las props de acuerdo al que se esté pasando */}\r\n      </Grid>\r\n    </div>\r\n  </Fragment>\r\n);\r\n\r\nexport default Tracks;\r\n","import React, { Fragment, useContext } from \"react\";\r\nimport { RecetasContext } from \"../../contexts/RecetasContext\";\r\nimport Recetas from \"./Recetas\";\r\nimport ProgressBar from \"../Common/ProgressBar\";\r\nimport Message from \"../Common/Message\";\r\n\r\nconst Recipes = () => {\r\n  const { doneFetch, recetas, text } = useContext(RecetasContext);\r\n  return (\r\n    <Fragment>\r\n      {doneFetch ? (\r\n        recetas.length ? (\r\n          <Recetas text={text} recetas={recetas} />\r\n        ) : (\r\n          <Message text={text} />\r\n        )\r\n      ) : (\r\n        <ProgressBar />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Recipes;\r\n"],"sourceRoot":""}